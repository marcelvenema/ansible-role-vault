---

#########################################################
## Main module for Hashicorp Vault Ansible role        ##
#########################################################

# Show message
- name: Show action message
  debug:
    msg: "Starting role {{ role_name }}... action: {{ action }}."

# Assert that action is in actions
- name: "Verify valid action ({{ action }})..."
  ansible.builtin.assert:
    that:
      - action in (actions | map('dict2items') | map('first') | map(attribute='key') | list)
    fail_msg: "The action '{{ action }}' is not in the list of valid actions..."
    quiet: true

# Merge role defaults with vault, include nested variables
# Nested merge does not work well, so use workaround to combine variables
- name: Gather defaults (vault)...
  ansible.builtin.include_vars:
    file: "{{ role_path }}/defaults/main.yml"
    name: vault_defaults

# Merge role defaults, include nested variables
- name: Merge role defaults with collected variables...
  ansible.builtin.set_fact:
    vault_vars: "{{ vault_defaults.vault | combine( vault | default({}), recursive=true ) }}"

# TODO: Send message to Kafka bus
- name: Publish message to Kafka bus...
  ansible.builtin.debug:
    msg: "TODO: Publish message to Kafka bus..."
  when: kafka_bootstrap_servers is defined 

# -------------------------------------------------------
# Install, uninstall, configure, update
- name: Start install action...
  ansible.builtin.include_tasks: install.yml
  when: action == "install"

- name: Start uninstall action...
  ansible.builtin.include_tasks: uninstall.yml
  when: action == "uninstall"

- name: Start configure action...
  ansible.builtin.include_tasks: configure.yml
  when: action == "configure"

- name: Start update action...
  ansible.builtin.include_tasks: update.yml
  when: action == "update"

# -------------------------------------------------------
# Start, Stop, Unseal
- name: Start start action...
  ansible.builtin.include_tasks: administration.yml
  when: action == "start"

- name: Start stop action...
  ansible.builtin.include_tasks: administration.yml
  when: action == "stop"

- name: Start unseal action...
  ansible.builtin.include_tasks: unseal.yml
  when: action == "unseal"

# -------------------------------------------------------
# secret_engine
- name: Start get_secret_engine task...
  ansible.builtin.include_tasks: secret_engine/secret_engine.yml
  when: action == "get_secret_engine"

- name: Start create_secret_engine action...
  ansible.builtin.include_tasks: secret_engine/secret_engine.yml
  when: action == "create_secret_engine"

- name: Start destroy_secret_engine action...
  ansible.builtin.include_tasks: secret_engine/secret_engine.yml
  when: action == "destroy_secret_engine"

# -------------------------------------------------------
# secrets
- name: Start get_secret action...
  ansible.builtin.include_tasks: secrets/secrets.yml
  when: action == "get_secret"

- name: Start create_secret action...
  ansible.builtin.include_tasks: secrets/create_secret.yml
  when: action == "create_secret"

- name: Start destroy_secret action...
  ansible.builtin.include_tasks: secrets/destroy_secret.yml
  when: action == "destroy_secret"

- name: Start import_secrets action...
  ansible.builtin.include_tasks: secrets/import_secrets.yml
  when: action == "import_secrets"

- name: Start export_secrets action...
  ansible.builtin.include_tasks: secrets/export_secrets.yml
  when: action == "export_secrets"

# -------------------------------------------------------
# policies
- name: Start get_policy action...
  ansible.builtin.include_tasks: policies/policies.yml
  when: action == "get_policy"

- name: Start create_policy action...
  ansible.builtin.include_tasks: policies/policies.yml
  when: action == "create_policy"

- name: Start destroy_policy action...
  ansible.builtin.include_tasks: policies/policies.yml
  when: action == "destroy_policy"

# -------------------------------------------------------
# approles
- name: Start get_approle action...
  ansible.builtin.include_tasks: approles/approles.yml
  when: action == "get_approle"

- name: Start create_approle action...
  ansible.builtin.include_tasks: approles/approles.yml
  when: action == "create_approle"

- name: Start destroy_approle action...
  ansible.builtin.include_tasks: approles/approles.yml
  when: action == "destroy_approle"
