---

#########################################################
## Hashicorp Vault Secrets module                      ##
#########################################################

# Validate global variables for Hashicorp Vault secrets module.
- name: Validate global variables for Hashicorp Vault secrets module.
  ansible.builtin.assert:
    that: "varitem is defined"
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop: 
    - vault_address
    - vault_token

#########################################################
## Get Secret                                          ##
#########################################################

- name: Get Vault secret
  when: action == "get_secret"
  block:

    # Register secret_result variable
    - name: Register secret_result variable
      ansible.builtin.set_fact:
        secret_result: ""
      no_log: true
      when: secret_result is not defined

    # Clear variable secret_result, be sure it is not used from a previous run.
    - name: Clear variable var_result
      ansible.builtin.set_fact:
        secret_result: ""
      no_log: true

    # Validate local variables
    - name: Validate variables for Vault get_secret action.
      ansible.builtin.assert:
        that: "varitem is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - vault_name
        - secret_name
        - secret_key
        - secret_result

    # Get secret via Vault API.
    - name: "Get secret {{ secret_name }} via API"
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/{{ vault_name }}/data/{{ secret_name }}"
        validate_certs: false 
        method: GET
        headers:
          X-Vault-Token: "{{ vault_token }}"
      register: api_result

    # Get secret_key value from result and parse into variable from var_result
    - name: Parse secret_key result
      ansible.builtin.set_fact:
        "{{ secret_result }}" : "{{ api_result.json.data.data[secret_key] }}"
      no_log: true

    # TODO error handling

#########################################################
## Create Secret                                       ##
#########################################################

- name: Create Vault secret
  ansible.builtin.include_tasks: secrets_create.yml
  when: action == "create_secret"
 
#########################################################
## Destroy Secret                                      ##
#########################################################

- name: Destroy Vault secret
  ansible.builtin.include_tasks: secrets_destroy.yml
  when: action == "destroy_secret"
  
#########################################################
## Import Secrets                                      ##
#########################################################

- name: Import Vault secrets
  ansible.builtin.include_tasks: secrets_import.yml
  when: action == "import_secrets" 

#########################################################
## Export Secrets                                      ##
#########################################################

- name: Export Vault secrets
  ansible.builtin.include_tasks: secrets_export.yml
  when: action == "export_secrets"
