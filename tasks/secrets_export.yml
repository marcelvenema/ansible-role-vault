---

#########################################################
## Export Secrets                                      ##
#########################################################

- name: Export Vault secrets
  when: action == "export_secrets"
  block:
    
   # Register var_result variable
    - name: Register var_result variable
      ansible.builtin.set_fact:
        var_result: "ostf_export_secrets"
      #no_log: true
      when: var_result is not defined

    # Clear variable var_result, be sure it is not used from a previous run.
    - name: Clear variable var_result
      ansible.builtin.set_fact:
        var_result: ""
      no_log: true

    # Validate local variables
    - name: Validate variables for Vault export_secrets action.
      ansible.builtin.assert:
        that: "{{ varitem }} is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - vault_name
        - secret_name
        - filename

    # Get secret via Vault API.
    - name: Get secret via API
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/{{ vault_name }}/data/{{ item }}"
        validate_certs: false 
        method: GET
        headers:
          X-Vault-Token: "{{ vault_token }}"
      register: secret_result
      with_items:
        - "{{ secret_name }}"
      no_log: true
  
    # Parse secret_result 
    - name: Parse secret results...
      ansible.builtin.set_fact:
        secret_export:  "{{ secret_export | default([]) + [{ 'secret_name': item.item, 'secret_data': item.json.data.data }] }}"
      loop: "{{ secret_result.results }}"
      no_log: true

    # Parse secret_result JSON
    - name: Parse secret results...
      ansible.builtin.set_fact:
        secret_export:  "{ 'secrets': {{ secret_export }}, 'filename': '{{ filename }}', 'timestamp': '{{ ansible_date_time.iso8601 }}', 'user': '{{ ansible_user_id }}' }"

    # Write secret to file
    - name: Write secret to file
      ansible.builtin.copy:
        content: "{{ secret_export | to_nice_json }}"
        dest: "{{ filename }}"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0600
  