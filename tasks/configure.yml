---

#########################################################
## Pre-configuration                                   ##
#########################################################

# Validate variables
- name: Validate required variables for action.
  ansible.builtin.assert:
    that: "varitem is defined"
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop: 
    - vault_address

# Check if Hashicorp Vault is not initialized via api, get content string and register as vault_init_status
- name: Gather Vault status information...
  ansible.builtin.uri:
    url: "{{ vault_address }}/v1/sys/init"
    validate_certs: false # TODO
    method: GET
    return_content: yes
  register: vault_init_status
  ignore_errors: true

# Get content string from response
- name: Register variable (vault_init_status)...
  ansible.builtin.set_fact:
    vault_init_status: "{{ vault_init_status.content }}"

#########################################################
## Configuration                                       ##
#########################################################

# Initialize Vault 
- name: Initialize Vault server...
  ansible.builtin.uri:
    url: "{{ vault_address }}/v1/sys/init"
    validate_certs: false
    method: POST
    body_format: json
    body:
      secret_shares: 5
      secret_threshold: 2
  register: vault_init_results 
  when: vault_init_status.initialized == false
  
# Save Vault root token and unseal keys
- name: Save Vault root token and unseal keys...
  ansible.builtin.set_fact:
    vault_token: "{{ vault_init_results.json.root_token }}"
    vault_unseal_keys: "{{ vault_init_results.json.keys_base64 }}"
  when: vault_init_status.initialized == false

# Save Vault root token to file
- name: Save Vault root token to file...
  ansible.builtin.copy:
    content: "{{ vault_token }}"
    dest: "{{ podman_data_folder }}/vault/config/vault_token"
    owner: "{{ podman_service_user }}"
    group: "{{ podman_service_user }}"
    mode: 0600
  when: vault_init_status.initialized == false

# Save Vault unseal keys to file
- name: Save Vault unseal keys to file...
  ansible.builtin.copy:
    content: "{{ vault_unseal_keys }}"
    dest: "{{ podman_data_folder }}/vault/config/vault_unseal_keys"
    owner: "{{ podman_service_user }}"
    group: "{{ podman_service_user }}"
    mode: 0600
  when: vault_init_status.initialized == false

#########################################################
## Unseal                                              ##
#########################################################

# Unseal Vault
- name: Unseal Vault...
  ansible.builtin.include_tasks: unseal.yml
  vars: 
    action: "unseal"

#########################################################
## Authentication                                      ##
#########################################################

# Enable Vault AppRole
- name: Enable Hashicorp Vault AppRole...
  ansible.builtin.uri:
    url: "{{ vault_address }}/v1/sys/auth/approle"
    validate_certs: false 
    method: POST
    status_code: 204
    headers:
      X-Vault-Token: "{{ vault_token }}"     
    body_format: json
    body:
      type: "approle"
      description: "AppRole authentication method for applications"

# Enable Vault username and password
- name: Enable Hashicorp Vault Username & Password...
  ansible.builtin.uri:
    url: "{{ vault_address }}/v1/sys/auth/userpass"
    validate_certs: false 
    method: POST
    status_code: 204
    headers:
      X-Vault-Token: "{{ vault_token }}"     
    body_format: json
    body:
      type: "approle"
      description: "Username and password authentication"

#########################################################
## Enable services                                     ##
#########################################################

# Enable Vault PKI Secrets Engine
- name: Enable Hashicorp Vault PKI Secrets Engine...
  ansible.builtin.uri:
    url: "{{ vault_address }}/v1/sys/mounts/pki"
    validate_certs: false 
    method: POST
    status_code: 204
    headers:
      X-Vault-Token: "{{ vault_token }}"     
    body_format: json
    body:
      type: "pki"
      description: "PKI secrets engine for certificates"
