---

#########################################################
## Import Secrets                                      ##
#########################################################

- name: Import Vault secrets
  when: action == "import_secrets"
  block:
  
   # Register var_result variable
    - name: Register var_result variable
      ansible.builtin.set_fact:
        var_result: "ostf_export_secrets"
      #no_log: true
      when: var_result is not defined

    # Clear variable var_result, be sure it is not used from a previous run.
    - name: Clear variable var_result
      ansible.builtin.set_fact:
        var_result: ""
      no_log: true

    # Validate local variables
    - name: Validate variables for Vault export_secrets action.
      ansible.builtin.assert:
        that: "{{ varitem }} is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - vault_name
        - filename

    # Read secret from file
    - name: Read secrets from file
      ansible.builtin.slurp:
        src: "{{ filename }}"
      register: secret_file_import
      no_log: true

    # Parse secrets
    - name: Parse secrets
      ansible.builtin.set_fact:
        secret_import: "{{ secret_file_import.content | b64decode }}"
      no_log: true

    # Create secret via API. Authenticate with vault_token.
    - name: "Import secret via API from file {{ filename }}..."
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/{{ vault_name }}/data/{{ item.secret_name }}"
        validate_certs: false 
        method: POST
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body_format: json
        body: 
          data: "{{ item.secret_data }}"
      register: vault_secret
      loop: "{{ secret_import.secrets }}" 
      no_log: true