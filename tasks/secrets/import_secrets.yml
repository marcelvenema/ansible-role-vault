---

#########################################################
## Hashicorp Vault Import Secrets module               ##
#########################################################
# Import secrets to Hashicorp Vault.
# variables:
#   filename: Name of the file to export secrets to

# Validate variables for Hashicorp Vault secrets module.
- name: Validate variables for Hashicorp Vault secrets module...
  ansible.builtin.assert:
    that: varitem is defined
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - vault_address
    - vault_token

# Validate local variables
- name: Validate required variables for Vault export_secrets action...
  ansible.builtin.assert:
    that: varitem is defined
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - filename

# Set temporary folder name, 6 random characters
- name: Set temporary folder name...
  ansible.builtin.set_fact:
    temp_folder: "/tmp/vault_{{ ansible_date_time.epoch }}"

# Create temp folder
- name: Create temp folder...
  ansible.builtin.file:
    path: "{{ temp_folder }}"
    state: directory

# Unpack secrets export file in temporary folder
- name: Unpack secrets export file in temporary folder...
  ansible.builtin.unarchive:
    src: "{{ filename }}"
    dest: "{{ temp_folder }}"
    remote_src: yes
  register: unpacked_secrets

# Load secrets from filename. single file. filename is filename is json extension
- name: Load secrets from filename...
  ansible.builtin.slurp:
    src: "{{ lookup('ansible.builtin.fileglob', temp_folder + '/*.json') }}"
  register: secrets_import_raw

# Set variable
- name: Set variable...
  ansible.builtin.set_fact:
    secrets_import: "{{ secrets_import_raw.content | b64decode | regex_replace('^42', '') | b64decode }}"

# loop through secrets, include task import_secrets_helper.yml
- name: Include task
  ansible.builtin.include_tasks: import_secrets_helper.yml
  loop: "{{ secrets_import.secrets }}"
  register: secret_results

# Delete temporary folder
- name: Delete temporary folder...
  ansible.builtin.file:
    path: "{{ temp_folder }}"
    state: absent

# Unset variables
- name: Unset variables...
  ansible.builtin.set_fact:
    temp_folder: ""
    secrets_import: ""
    secrets_import_raw: ""

# Debug message
- name: Information message...
  ansible.builtin.debug:
    msg: "Secrets imported from {{ filename }} to Hashicorp Vault ({{ vault_address }})..."
