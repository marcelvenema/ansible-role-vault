---

#########################################################
## Hashicorp Vault Secrets module                      ##
#########################################################

# Validate variables for Hashicorp Vault secrets module.
- name: Validate variables for Hashicorp Vault secrets module...
  ansible.builtin.assert:
    that: "varitem is defined"
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - vault_address
    - vault_token

#########################################################
## Get Secret                                          ##
#########################################################

- name: get_secret action...
  when: action == "get_secret"
  block:

    # Register secret_result variable
    - name: Register variable (secret_result)...
      ansible.builtin.set_fact:
        secret_result: ""
      no_log: true
      when: secret_result is not defined

    # Clear variable secret_result, be sure it is not used from a previous run.
    - name: Clear variable...
      ansible.builtin.set_fact:
        secret_result: ""
      no_log: true

    # Validate local variables
    - name: Validate variables for Vault get_secret action...
      ansible.builtin.assert:
        that: "varitem is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop:
        - secret_engine_name
        - secret_name
        - secret_key
        - secret_result

    # Get secret via Vault API.
    - name: "Get secret from Vault ({{ secret_name }})..."
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/{{ secret_engine_name }}/data/{{ secret_name }}"
        validate_certs: "{{ vault_vars.application.validate_certs | default(true) }}"
        method: GET
        headers:
          X-Vault-Token: "{{ vault_token }}"
      register: api_result
      no_log: true

    # Get secret_key value from result and parse into variable from var_result
    - name: Parse secret_key results...
      ansible.builtin.set_fact:
        "{{ secret_result }}" : "{{ api_result.json.data.data[secret_key] }}"
      no_log: true

    # TODO error handling

#########################################################
## Cleanup                                             ##
#########################################################

# Unset variables
- name: Unset variables...
  ansible.builtin.set_fact:
    secret_result: null
