---

#########################################################
## Hashicorp Vault Secrets module                      ##
#########################################################

# Validate variables for Hashicorp Vault secrets module.
- name: Validate variables for Hashicorp Vault secrets module...
  ansible.builtin.assert:
    that: "varitem is defined"
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - vault_address
    - vault_token

#########################################################
## Get Secret                                          ##
#########################################################

- name: get_secret action...
  when: action == "get_secret"
  block:

    # Register secret_result variable
    - name: Register variable (secret_result)...
      ansible.builtin.set_fact:
        secret_result: ""
      no_log: true
      when: secret_result is not defined

    # Clear variable secret_result, be sure it is not used from a previous run.
    - name: Clear variable...
      ansible.builtin.set_fact:
        secret_result: ""
      no_log: true

    # Validate local variables
    - name: Validate variables for Vault get_secret action...
      ansible.builtin.assert:
        that: "varitem is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop:
        - secret_engine_name
        - secret_name
        - secret_key
        - secret_result

    # Get secret via Vault API.
    - name: "Get secret from Vault ({{ secret_name }})..."
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/{{ secret_engine_name }}/data/{{ secret_name }}"
        validate_certs: "{{ vault_validate_certs | default(true) }}"
        method: GET
        headers:
          X-Vault-Token: "{{ vault_token }}"
      register: api_result

    # Get secret_key value from result and parse into variable from var_result
    - name: Parse secret_key results...
      ansible.builtin.set_fact:
        "{{ secret_result }}" : "{{ api_result.json.data.data[secret_key] }}"
      no_log: true

    # TODO error handling

#########################################################
## Create Secret                                       ##
#########################################################

- name: create_secret action...
  when: action == "create_secret"
  block:

    # Validate local variables
    - name: Validate variables for Vault create_secret action...
      ansible.builtin.assert:
        that: "varitem is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop:
        - secret_engine_name
        - secret_name
        - secret_keyvalue

    # Create secret via API. Authenticate with vault_token.
    - name: "Create secret {{ secret_name }}..."
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/{{ secret_engine_name }}/data/{{ secret_name }}"
        validate_certs: "{{ vault_validate_certs | default(true) }}"
        method: POST
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body_format: json
        body:
          data: "{{ secret_keyvalue }}"
      register: vault_secret
      no_log: true

#########################################################
## Destroy Secret                                      ##
#########################################################

- name: Destroy Vault secret
  when: action == "destroy_secret"
  block:

    # Show information message
    - name: Information message
      ansible.builtin.debug:
        msg: "This part is not (yet) implemented."

    # Stop playbook
    - name: Stop playbook
      ansible.builtin.meta: end_play

#########################################################
## Export Secrets                                      ##
#########################################################
# Export secrets to a compressed file json file
# format: { "secrets": [ { "secret_name": "<name>", "hash": "<sha256 hash>", "secret_data": "<data>" } ], "filename": "filename", "timestamp": "timestamp", "user": "user" }
# content is b64encoded and '42' is added upfront to prevent the data from being parsed.

- name: export_secrets action...
  when: action == "export_secrets"
  block:

    # Validate local variables
    - name: Validate required variables for Vault export_secrets action...
      ansible.builtin.assert:
        that: "varitem is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop:
        - secret_engine_name
        - secret_name
        - filename

    # Register variable, clear results
    - name: Register variable (secret_results)
      ansible.builtin.set_fact:
        secret_results: ""

    # # loop through secrets, get secrets from Vault
    - name: Include task
      ansible.builtin.include_tasks: secrets_export.yml
      loop: "{{ secret_name }}"

    # Parse secret_results JSON
    - name: Parse secret results...
      ansible.builtin.set_fact:
        secret_export:  '{ "secrets": {{ secret_results }}, "filename": "{{ filename }}", "timestamp": "{{ ansible_date_time.iso8601 }}", "user": "{{ ansible_user_id }}" }'

    # Write secret to file
    - name: Write secret to file
      ansible.builtin.copy:
        content: "42{{ secret_export | to_nice_json | b64encode }}"
        dest: "{{ filename }}.json"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0600

    # archive json file
    - name: Archive json file
      community.general.archive:
        path: "{{ filename }}.json"
        dest: "{{ filename }}.tar.gz"
        format: gz

    # Remove json file
    - name: Remove json file
      ansible.builtin.file:
        path: "{{ filename }}.json"
        state: absent

#########################################################
## Import Secrets                                      ##
#########################################################

# Unset variables
- name: Unset variables...
  ansible.builtin.set_fact:
    api_result: null
    vault_secret: null
    secret_result: null
    secret_export: null
    secret_import: null
    secret_file_import: null
    vault_mount: null



