---

#########################################################
## Hashicorp Vault Export Secrets module               ##
#########################################################

# Export secrets from Hashicorp Vault.
# variables:
#   secret_engine_name: Name of the secret engine
#   secret_name: Name of the secret
#   secrets: JSON string of secrets to export
#   filename: Name of the file to export secrets to

# Validate variables for Hashicorp Vault secrets module.
- name: Validate variables for Hashicorp Vault secrets module...
  ansible.builtin.assert:
    that: varitem is defined
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - vault_address
    - vault_token

# Validate local variables
- name: Validate required variables for Vault export_secrets action...
  ansible.builtin.assert:
    that: varitem is defined
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - filename

# Validate local variables, variable secrets should be defined, or secret_name, secret_engione_name should be defined
- name: Validate required variables for Vault export_secrets action...
  ansible.builtin.assert:
    that: secrets is defined or (secret_engine_name and secret_name is defined)
    fail_msg: "Either 'secrets' variable must be defined or both 'secret_engine_name' and 'secret_name' variables must be defined."
    quiet: true

# set secrets variable 
- name: Set secrets variable...
  ansible.builtin.set_fact:
    secrets: "[ { 'secret_engine_name': '{{ secret_engine_name }}', 'secret_name': '{{ secret_name }}' } ]"
  when: secrets is not defined
  
#########################################################
## Parse secrets variable                              ##
#########################################################

# loop through secrets, include task export_secrets_helper.yml
- name: Include task
  ansible.builtin.include_tasks: export_secrets_helper.yml
  loop: "{{ secrets }}"
  loop_control:
    loop_var: secret
  register: secret_results
  no_log: true 

# Set variable
- name: Set variable...
  ansible.builtin.set_fact:
    secret_results: "{{ secret_results[4: ]}}"

# Parse secret_results JSON
- name: Parse secret results...
  ansible.builtin.set_fact:
    secret_export:  '{ "secrets": {{ secret_results }}, "filename": "{{ filename }}", "timestamp": "{{ ansible_date_time.iso8601 }}", "user": "{{ ansible_user_id }}" }'

# Write secret to file
- name: Write secrets to file...
  ansible.builtin.copy:
    content: "42{{ secret_export | to_json | b64encode }}"
    dest: "{{ filename }}.json"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0600

# Archive json file
- name: Archive json file...
  ansible.builtin.archive:
    path: "{{ filename }}.json"
    dest: "{{ filename }}.zip"
    format: zip

# Remove json file
- name: Remove json file...
  ansible.builtin.file:
    path: "{{ filename }}.json"
    state: absent

# Unset variables
- name: Unset variables...
  ansible.builtin.set_fact:
    secret_result: null
    secret_export: null

# Debug message
- name: Information message...
  ansible.builtin.debug:
    msg:
      - "{{ secrets | length }} secrets exported to {{ filename }}.zip..."

